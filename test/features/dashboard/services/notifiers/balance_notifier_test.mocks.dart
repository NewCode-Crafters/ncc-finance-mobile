// Mocks generated by Mockito 5.4.6 from annotations
// in bytebank/test/features/dashboard/services/notifiers/balance_notifier_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:bytebank/features/dashboard/models/balance.dart' as _i4;
import 'package:bytebank/features/dashboard/services/balance_service.dart'
    as _i2;
import 'package:cloud_firestore/cloud_firestore.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [BalanceService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBalanceService extends _i1.Mock implements _i2.BalanceService {
  MockBalanceService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.Balance>> getBalances({required String? userId}) =>
      (super.noSuchMethod(
            Invocation.method(#getBalances, [], {#userId: userId}),
            returnValue: _i3.Future<List<_i4.Balance>>.value(<_i4.Balance>[]),
          )
          as _i3.Future<List<_i4.Balance>>);

  @override
  _i3.Future<void> updateBalanceOnTransaction({
    required String? userId,
    required String? balanceId,
    required double? transactionAmount,
    _i5.WriteBatch? batch,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateBalanceOnTransaction, [], {
              #userId: userId,
              #balanceId: balanceId,
              #transactionAmount: transactionAmount,
              #batch: batch,
            }),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
